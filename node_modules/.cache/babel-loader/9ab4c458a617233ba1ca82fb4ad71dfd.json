{"ast":null,"code":"var _jsxFileName = \"/home/en3on/coding/projects/js/ReactApps/recipe-app/client/src/components/recipes/IngredientForm.js\";\nimport React, { Component } from 'react';\nimport './IngredientForm.css';\n/**\n * Represents the form for adding ingredients\n */\n\nclass IngredientForm extends Component {\n  /**\n   * @param {props} props props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredient: null,\n      ingredientArr: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      ingredient: e.target.value\n    });\n    console.log(this.state.ingredient);\n  }\n\n  handleClick(e) {\n    this.props.ingredientChangeHandler(this.state.ingredient);\n    this.setState(prevState => ({\n      ingredientArr: [...prevState.ingredientArr, this.state.ingredient]\n    }));\n  }\n  /**\n   * Renders component\n   * @return {html} input field for ingredient\n   */\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      id: \"inputContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"ingredientsList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.ingredientArr.map(ingredient => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, ingredient))), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Ingredient\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      id: \"addBtn\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"+\")));\n  }\n\n}\n\nexport default IngredientForm;","map":{"version":3,"sources":["/home/en3on/coding/projects/js/ReactApps/recipe-app/client/src/components/recipes/IngredientForm.js"],"names":["React","Component","IngredientForm","constructor","props","state","ingredient","ingredientArr","handleChange","bind","handleClick","e","setState","target","value","console","log","ingredientChangeHandler","prevState","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,sBAAP;AAEA;;;;AAGA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AACrC;;;AAGAE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAACN,MAAAA,UAAU,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAtB,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWC,UAAvB;AACD;;AAEDI,EAAAA,WAAW,CAACC,CAAD,EAAI;AACb,SAAKP,KAAL,CAAWa,uBAAX,CAAmC,KAAKZ,KAAL,CAAWC,UAA9C;AACA,SAAKM,QAAL,CAAeM,SAAD,KAAgB;AAC5BX,MAAAA,aAAa,EAAE,CAAC,GAAGW,SAAS,CAACX,aAAd,EAA6B,KAAKF,KAAL,CAAWC,UAAxC;AADa,KAAhB,CAAd;AAGD;AAED;;;;;;AAIAa,EAAAA,MAAM,GAAG;AACP,WACE,0CACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,iBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWE,aAAX,CAAyBa,GAAzB,CAA8Bd,UAAD,IAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,UAAL,CADD,CADH,CADF,EAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,YAA/B;AACE,MAAA,QAAQ,EAAE,KAAKE,YADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAQE;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,OAAO,EAAE,KAAKE,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CADF,CADF;AAcD;;AA9CoC;;AAiDvC,eAAeR,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport './IngredientForm.css';\n\n/**\n * Represents the form for adding ingredients\n */\nclass IngredientForm extends Component {\n  /**\n   * @param {props} props props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      ingredient: null,\n      ingredientArr: [],\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ingredient: e.target.value});\n    console.log(this.state.ingredient);\n  }\n\n  handleClick(e) {\n    this.props.ingredientChangeHandler(this.state.ingredient);\n    this.setState((prevState) => ({\n      ingredientArr: [...prevState.ingredientArr, this.state.ingredient],\n    }));\n  }\n\n  /**\n   * Renders component\n   * @return {html} input field for ingredient\n   */\n  render() {\n    return (\n      <>\n        <div id=\"inputContainer\">\n          <ul id=\"ingredientsList\">\n            {this.state.ingredientArr.map((ingredient) => (\n              <li>{ingredient}</li>\n            ))}\n          </ul>\n          <input type=\"text\" placeholder=\"Ingredient\" \n            onChange={this.handleChange} />\n          <span id=\"addBtn\" onClick={this.handleClick}>+</span>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default IngredientForm;\n"]},"metadata":{},"sourceType":"module"}